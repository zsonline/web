{% macro content(args) %}
    {% set args = {
        content: null
    } | merge(args) %}

    {% for chunk in args.content %}
        {% if chunk.type == 'markup' %}
            {{ chunk }}
        {% else %}
            {% switch chunk.entry.type.handle %}
                {% case 'contentFile' %}
                    {% set file = chunk.entry.contentFileFile
                        .limit(1)
                        .collect()
                        .first() %}

                    {% if file %}
                        {% from '_macros/button.twig' import link %}

                        <div class="content-block content-block--small">
                            <div class="content-file">
                                <span class="content-file__title">{{ file.title }}</span>
                                <span class="content-file__filename">{{ file.filename }}</span>
                                {{ link({
                                    download: true,
                                    href: file.url,
                                    icon: 'download',
                                    label: 'Herunterladen',
                                    style: 'accent'
                                }) }}
                            </div>
                        </div>
                    {% endif %}

                {% case 'contentGallery' %}
                    {% set images = chunk.entry.contentGalleryImages
                        .with([
                            'imageContributions.contribution:contributionUser',
                            'imageContributions.contributionExternal'
                        ])
                        .withTransforms([
                            { height: 300 },
                            { height: 400 },
                            { height: 500 },

                            { mode: 'fit', height: 400, width: 400 },
                            { mode: 'fit', height: 650, width: 650 },
                            { mode: 'fit', height: 1024, width: 1024 },
                            { mode: 'fit', height: 1440, width: 1440 }
                        ])
                        .collect() %}

                    {% if images|length > 0 %}
                        <div class="content-block content-block--medium">
                            {{ _self.gallery({
                                images: images
                            }) }}
                        </div>
                    {% endif %}

                {% case 'contentImage' %}
                    {% set image = chunk.entry.contentImageImage
                        .with([
                            'imageContributions.contribution:contributionUser',
                            'imageContributions.contributionExternal'
                        ])
                        .withTransforms([
                            { width: 400 },
                            { width: 650 },
                            { width: 1024 },
                            { width: 1440 },

                            { mode: 'fit', height: 400, width: 400 },
                            { mode: 'fit', height: 650, width: 650 },
                            { mode: 'fit', height: 1024, width: 1024 },
                            { mode: 'fit', height: 1440, width: 1440 }
                        ])
                        .limit(1)
                        .collect()
                        .first() %}

                    {% if image %}
                        <div class="content-block content-block--{{ chunk.entry.contentImageSize }}">
                            {{ _self.image({
                                image: image,
                                size: chunk.entry.contentImageSize.value
                            }) }}
                        </div>
                    {% endif %}

                {% case 'contentNote' %}
                    {% if chunk.entry.contentNoteTitle or chunk.entry.contentNoteContent %}
                        <div class="content-block content-block--small">
                            <figure class="content-note">
                                {% if chunk.entry.contentNoteTitle %}
                                    <h5>{{ chunk.entry.contentNoteTitle }}</h5>
                                {% endif %}

                                {{ chunk.entry.contentNoteContent }}
                            </figure>
                        </div>
                    {% endif %}

                {% case 'contentQuote' %}
                    {% if chunk.entry.contentQuoteQuote %}
                        <div class="content-block content-block--small">
                            <figure class="content-quote">
                                <blockquote>{{ chunk.entry.contentQuoteQuote }}</blockquote>
                                {% if chunk.entry.contentQuoteCaption %}
                                    <figcaption class="content-caption">{{ chunk.entry.contentQuoteCaption }}</figcaption>
                                {% endif %}
                            </figure>
                        </div>
                    {% endif %}

            {% endswitch %}
        {% endif %}
    {% endfor %}
{% endmacro %}

{% macro image(args) %}
    {% set args = {
        caption: true,
        image: null,
        lightbox: true,
        loading: 'lazy',
        size: 'medium'
    } | merge(args) %}

    {% from '_macros/lightbox.twig' import lightboxImage %}

    {% switch args.size %}
        {% case 'small' %}
            {% set srcset = [400, 650] %}
        {% case 'medium' %}
            {% set srcset = [400, 650, 1024] %}
        {% case 'large' %}
            {% set srcset = [400, 650, 1024, 1440] %}
    {% endswitch %}

    {% set transform = { width: srcset|last } %}

    {% if args.image %}
        <figure class="{{ html_classes('content-image', args.size) }}">
            {{ tag('img', {
                'data-lightbox': args.lightbox ? lightboxImage({ image: args.image }) | escape : false,
                height: args.image.getHeight(transform),
                loading: args.loading,
                sizes: '100vw',
                srcset: args.image.getSrcset(srcset),
                width: args.image.getWidth(transform)
            }) }}

            {% if args.caption %}
                {{ _self.caption({
                    caption: args.image.imageCaption,
                    contributions: args.image.imageContributions ?? null
                }) }}
            {% endif %}
        </figure>
    {% endif %}
{% endmacro %}

{% macro gallery(args) %}
    {% set args = {
        images: null
    } | merge(args) %}

    {% from '_macros/icon.twig' import icon %}
    {% from '_macros/lightbox.twig' import lightboxImage %}

    {% set transform = { height: 500 } %}

    <figure class="content-gallery swiper">
        <div class="swiper-wrapper">
            {% for image in args.images %}
                <div class="swiper-slide">
                    {{ tag('img', {
                        'data-lightbox': lightboxImage({ image: image }) | escape,
                        height: image.getHeight(transform),
                        loading: 'lazy',
                        sizes: '100vw',
                        srcset: image.getUrl({ height: 300 }) ~ ' 650w, ' ~ image.getUrl({ height: 400 }) ~ ' 1024w, ' ~ image.getUrl({ height: 500 }) ~ ' 1440w',
                        width: image.getWidth(transform)
                    }) }}

                    {{ _self.caption({
                        caption: image.imageCaption,
                        contributions: image.imageContributions
                    }) }}
                </div>
            {% endfor %}
        </div>

        <div class="content-gallery__meta">
            <figcaption class="content-caption"></figcaption>

            <div class="gallery-controls">
                <button class="swiper-prev">
                    {{ icon({ name: 'chevron-left' }) }}
                </button>
                <span class="swiper-pagination"></span>
                <button class="swiper-next">
                    {{ icon({ name: 'chevron-right' }) }}
                </button>
            </div>
        </div>
    </figure>
{% endmacro %}

{% macro caption(args) %}
    {% set args = {
        caption: '',
        contributions: null
    } | merge(args) %}

    {% if args.caption or args.contributions %}
        <figcaption class="content-caption">
            {{ args.caption }}
            {% if args.contributions %}
                <small>{{ _self.contributions({ contributions: args.contributions }) }}</small>
            {% endif %}
        </figcaption>
    {% endif %}
{% endmacro %}

{% macro contributions(args) %}
    {%- set args = {
        conjunction: '',
        contributions: [],
        showLinks: true
    } | merge(args) -%}

    {%- for contribution in args.contributions -%}
        {%- set contributionType = '' -%}

        {%- if contribution.type == 'contribution' -%}
            {%- set user = contribution.contributionUser.first() -%}
            {%- set contributionType = contribution.contributionType -%}

            {%- if args.showLinks -%}
                <a href="{{ url('autor-innen/' ~ user.username) }}">{{ user.fullName }}</a>
            {%- else -%}
                {{ user.fullName }}
            {%- endif -%}
        {%- elseif contribution.type == 'contributionExternal' -%}
            {%- set contributionType = contribution.contributionExternalType -%}

            {{ contribution.contributionExternalContributor }}
        {%- endif -%}

        {%- if contributionType and (loop.last or (
            contributionType != args.contributions[loop.index0 + 1].contributionType and
            contributionType != args.contributions[loop.index0 + 1].contributionExternalType
        )) -%}
            {{ ' (' ~ contributionType ~ ')' }}
        {%- endif -%}

        {%- if loop.revindex > 2 or (loop.revindex == 2 and not args.conjunction) -%}
            {{ ', ' }}
        {%- elseif loop.revindex == 2 -%}
            {{ ' ' ~ args.conjunction ~ ' ' }}
        {%- endif -%}
    {%- endfor -%}
{% endmacro %}
